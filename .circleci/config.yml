# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config
# See: https://circleci.com/docs/configuration-reference
# Stacks detected: cicd:empty
version: 2.1
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Set AWS Region
          command: aws configure set region us-east-1
      - run:
          name: Create Cloudfromation Stack
          command: |
              aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1
  # configure_infrastructure:
  #   docker:
  #     - image: python:3.9-alpine3.16
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprint: "SHA256:o/Law/xoaeC8TtrnABPSfNEWNhbWYv3QefFXNMKvadA"
  #     - run:
  #         name: Install Ansible
  #         command: |
  #             apk add --update ansible
  #     - run:
  #         name: Run Playbook and configure server
  #         command: |
  #             ansible-playbook -i inventory.txt main1.yml
  
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           if curl -s --head ${URL}
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi

  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          command: return 1
      - destroy_environment

  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Set AWS Region
          command: aws configure set region us-east-1
      - run:
          name: Debug - Print CIRCLE_WORKFLOW_ID
          command: echo "CIRCLE_WORKFLOW_ID=${CIRCLE_WORKFLOW_ID}"
      - run:
          name: Execute bucket.yml
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
  
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Set AWS Region
          command: aws configure set region us-east-1
      - run: yum install -y tar gzip
      - run:
          name: fetch and save the old pipeline run ID(bucket name)
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value"\
            --no-paginate --output text > ~/textf.txt\
            --region us-east-1
      - persist_to_workspace:
          root: ~/
          paths:
            - textf.txt
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Set AWS Region
          command: aws configure set region us-east-1
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"\
            --region us-east-1


workflows:
  cft:
    jobs:
      #- create_infrastructure
      # - configure_infrastructure:
      #     requires:
      #       - create_infrastructure
      # - smoke_test:
      #     requires:
      #       - create_infrastructure
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - get_last_deployment_id